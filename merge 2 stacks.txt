#include <stdio.h>
#include <stdlib.h>

#define MAX_SIZE 100

int stack1[MAX_SIZE], stack2[MAX_SIZE], stack3[MAX_SIZE];
int top1 = -1, top2 = -1, top3 = -1;

void push1(int data) {
    if (top1 >= MAX_SIZE - 1) {
        printf("Stack1 Overflow\n");
        return;
    }
    stack1[++top1] = data;
}

void push2(int data) {
    if (top2 >= MAX_SIZE - 1) {
        printf("Stack2 Overflow\n");
        return;
    }
    stack2[++top2] = data;
}

void push3(int data) {
    if (top3 >= MAX_SIZE - 1) {
        printf("Stack3 Overflow\n");
        return;
    }
    stack3[++top3] = data;
}

int pop1() {
    if (top1 < 0) {
        printf("Stack1 Underflow\n");
        return -1;
    }
    return stack1[top1--];
}

int pop2() {
    if (top2 < 0) {
        printf("Stack2 Underflow\n");
        return -1;
    }
    return stack2[top2--];
}

void mergeStacks() {
    while (top1 >= 0 && top2 >= 0) {
        if (stack1[top1] > stack2[top2]) {
            push3(pop1());
        } else {
            push3(pop2());
        }
    }

    while (top1 >= 0) {
        push3(pop1());
    }

    while (top2 >= 0) {
        push3(pop2());
    }
}

int main() {
    // Push some data to stack1
    push1(1);
    push1(3);
    push1(5);

    // Push some data to stack2
    push2(2);
    push2(4);
    push2(6);

    // Merge the two stacks and store the result in stack3
    mergeStacks();

    // Print the elements of stack3
    int i;
    for (i = 0; i <= top3; i++) {
        printf("%d ", stack3[i]);
    }
    printf("\n");
    return 0;
}
